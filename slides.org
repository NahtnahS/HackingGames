#+Title: Hacking Games in a Hacked Game
#+Author: Rusty Wagner, Jordan Wiens
#+Email: rusty@vector35.com, jordan@vector35.com
#+STARTUP: showall
#+OPTIONS: reveal_center:t reveal_progress:t reveal_history:t reveal_control:t
#+OPTIONS: reveal_mathjax:nil reveal_rolling_links:nil reveal_keyboard:t reveal_overview:t num:nil
#+OPTIONS: reveal_width:1024 reveal_height:768 reveal_title_slide:nil
#+OPTIONS: toc:nil
#+REVEAL_MARGIN: 0.1
#+REVEAL_MIN_SCALE: 0.1
#+REVEAL_MAX_SCALE: 3.5
#+REVEAL_ROOT: ./reveal.js
#+REVEAL_TRANS: none
#+REVEAL_SPEED: 0.01
#+REVEAL_THEME: vector35
#+REVEAL_HLEVEL: 1
#+REVEAL_POSTAMBLE: 
#+REVEAL_PLUGINS: (highlight markdown notes)
#+REVEAL_EXTRA_JS: { src: './js/Chart.min.js', async: true , callback: function() { Chart.renderChart(); } }, { src: './js/Chart.StackedBar.js', async: true }
#+MACRO: NL @@latex:\\@@ @@html:<BR>@@
#+MACRO: SP @@latex:\,@@ @@html:&nbsp;@@

* Hacking Games{{{NL}}}in a{{{NL}}}Hacked Game                       
[[./images/rusty-hs.jpg]] [[./images/jordan-hs.jpg]] {{{NL}}}
[[./images/wide-black-small.png]]
#+BEGIN_NOTES
Hi, I'm Jordan -- and I'm Rusty
#+END_NOTES

* BIO                                                                
- CTF junkies
- Worked for Raytheon SI
- Quit and founded Vector 35 to do "CTF stuff"

* Is this talk for you?
- Did you play Pwn Adventure 3 during Ghost in the Shellcode this year?
- Have you ever played a CTF before?
- Have you heard of CTFs before?
- Have you played or hacked a video game?
#+BEGIN_NOTES
Raise your hands and keep them up if any of the following apply to you.  If you
still have your hand down, just go ahead and leave now, you're probably not
going to like this talk.
#+END_NOTES

* Questions?
:PROPERTIES:
:reveal_background: ./images/confused.jpg
:reveal_background_trans: none
:END:      

* Join Us!                                                           
First 15 people using the code ~April172015~ on SSID ~InfiltrateSpeaker~ get working
internet in the room for the day.
(MITM DMG injection free of charge courtesy of @patrickwardle)
- [[http://pwnadventure.com/]]
- Download client (GPU recommended)
- Online demo at the end of the talk
#+BEGIN_NOTES
Information about the client being available, the format, gaming.
#+END_NOTES

* Motivation                                                         
#+BEGIN_NOTES
(3min)
First, a brief note on the motivation for the talk. We're really talking about
the growth of both CTFs and gaming together, and how they're related. So first,
gaming.
#+END_NOTES

* Game Industry Profits                                              
[[./images/digicapital.png]]
#+BEGIN_NOTES
	Here comes the obligatory "Stuff over time" graphs. In this case, money,
	specifically annual revenue of the video game industry. It's a $90B (or
	maybe more depending on who's doing the counting) industry, and is only
	expected to grow.

	http://www.gartner.com/newsroom/id/2614915 (predicted 100B)
	Digi-Capital_Global_Games_Investment_Review_2015_Executive_Summary.pdf
#+END_NOTES

* Hacking (in?) the Game Industry                                    
- As old as the game industry itself
- Led to the rise of the demo scene, cracking, trainers, etc
[[./images/sanderfocus_animation.gif]]

** Notable Examples
- BNET.D (interop)
- Glider (interop)
- Diablo 3 Auction House (vuln)
[[./images/blizzard.jpg]]

** Code-Signing 
- Game platforms as early bellwethers
[[./images/twilight-hack.jpg]] 
[[./images/nintendo-patch.jpg]]
#+BEGIN_NOTES
Discussion of how early video game platforms had incentive for strong DRM and
were some of the first to implement code-signing. The hacks from those days
(stealing code-signed objects and repurposing them, for example) remain relevant
today. Instead of a save game file and video game, it's a signed kernel module
with a bug for a priv-esc.
#+END_NOTES

** TAS Total Control
[[./images/tasvideos.png]]

#+BEGIN_NOTES
The Tool-Assisted Speed run scene in gaming has done some pretty amazing
stuff. They started with frame-perfect replays of particular games in emulators,
and have graduated to what they now call "total control" which is not only
arbitrary code execution but implementing some ridiculous payloads on top of it.

They started many years ago with "select glitches", abusing state bugs to cause
single byte increments or overwrites to change warp destinations or item types,
for example. These were often found without actually understanding the causes or
implications, but lately they've moved far beyond

The Tool-Assisted Speed Run scene has really taken off in recent years. They've
even invented a new term for code execution, "total control", and pulled off
some super neat tricks.

#+END_NOTES
*** TASBot
[[./images/tasbot.jpg]]
#+BEGIN_NOTES
https://twitter.com/mrtasbot

Hardware platform for physical interaction with games. No longer doing total
control exploits via emulators and software inputs but actually wiring directly
into consoles via gamepad interfaces. (Though sometimes cheating with wiring up
reset buttons as well)

#+END_NOTES

*** AGDQ 2015
[[./images/tasbot-twitch.png]]
#+BEGIN_NOTES
https://twitter.com/mrtasbot
http://tasvideos.org/forum/viewtopic.php?t=15787
http://www.reddit.com/r/programming/comments/2rhvsa/tasbot_executes_arbitrary_code_on_the_snes_with/cngj16x
#+END_NOTES


* Growth of CTFs                                                     
:PROPERTIES:
:reveal_data_state: chart1
:END:      
#+REVEAL_HTML: <canvas id="chart1" width="800" height="600"></canvas>
#+BEGIN_NOTES
Likewise, there's an interesting parallel trend in the CTF world as well. Not
only are CTFs taking off in popularity, but (as Chris Eagle discussed here two
years ago), there's increasingly real-world spill-over between them.
#+END_NOTES

* Brief History of CTFs                                              
[[./images/two-toy-soldiers.jpg]]
#+BEGIN_NOTES
#+END_NOTES

** Basics
- Red Team (Jeopardy Style)
- Blue Team ("Defensive")
- Full Spectrum (or Attack/Defense)
- WarGames

** DEF CON
- One of the earliest (1996)
- Beginning of "modern" A/D (2004/2005)
- Kenshoto (2005-2009)
- DDTEK (2010-2013)
- LegitBS (2014-Current)
#+BEGIN_NOTES
One of the oldest events, always been attack-defense, pretty much defined the
modern-attack defense style event.
#+END_NOTES

* Real World Bugs
#+BEGIN_NOTES
(5min)
#+END_NOTES
:PROPERTIES:
:reveal_background: ./images/bugs.jpg
:reveal_background_trans: none
:END:      

** 
[[./images/phplogo.png]]
#+BEGIN_NOTES
PHP in general is worthy of its own whole talk about CTF challenges
The whipping boy of CTFs (and Stefan Esser), PHP is constantly getting picked
on. You could fill a talk showing nothing but the awful ways PHP is abused and
mocked. A couple of common targets for abuse are:
#+END_NOTES
*** fighting for equality
[[./images/php.png]]
#+BEGIN_NOTES
When are two unequal things equal? If you ask PHP, pretty darn often. An empty
array? Why yes, yes it is equal to any random string.
#+END_NOTES

*** type coercion 
#+BEGIN_SRC php
<?php
    $key = "key{XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX}";
    $pass = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    if ( strcasecmp( $_GET['pass'], $pass ) == 0 ) {
        echo($key);
    }
?>
#+END_SRC
#+BEGIN_NOTES
This bug is particularly interesting since multiple CTFs have been bitten by it
unintentionally in their own score infrastructure. You'd think people would have
figured it out by now with all the challenges highlighting how broken it is, but
apparently not.

Note though that these two bugs weren't specifically found in a CTF, though many
CTF players were introduced to them through CTFs.
#+END_NOTES

*** php-cgi
[[http://eindbazen.net/2012/05/php-cgi-advisory-cve-2012-1823/][eindbazen.net/2012/05/php-cgi-advisory-cve-2012-1823]]
[[./images/eindbazen.png]]
#+BEGIN_NOTES
The third bug, however was an actual 0day that came from a CTF. It turns out one
of the problems with a CTF is untended solutions.  Sometimes those unintended
solutions result in accidental 0day (more often than you'd think). One such
example was the php-cgi vulnerability that Eindbazen found a few years ago.
#+END_NOTES

** go go!
Bunyan's Revenge (PlaidCTF 2013)
#+BEGIN_SRC C
    case ODOTPTR:
        cgen(nl, res);
+       // explicit check for nil if struct is large enough
+       // that we might derive too big a pointer.
+       if(nl->type->type->width >= unmappedzero) {
+           regalloc(&n1, types[tptr], res);
+           gmove(res, &n1);
+           n1.op = OINDREG;
+           n1.type = types[TUINT8];
+           n1.xoffset = 0;
+           gins(ATESTB, nodintconst(0), &n1);
+           regfree(&n1);
+       }
        if(n->xoffset != 0) {
-           // explicit check for nil if struct is large enough
-           // that we might derive too big a pointer.
-           if(nl->type->type->width >= unmappedzero) {
-               regalloc(&n1, types[tptr], res);
-               gmove(res, &n1);
-               n1.op = OINDREG;
-               n1.type = types[TUINT8];
-               n1.xoffset = 0;
-               gins(ATESTB, nodintconst(0), &n1);
-               regfree(&n1);
-           }
            ginscon(optoas(OADD, types[tptr]), n->xoffset, res);
#+END_SRC

#+BEGIN_NOTES
- Real GO developers annoying about security, so...
#+END_NOTES

** Pirate Danbi
- TLV protocol
- bzip2
- [[https://git.io/vvETK]] (ctf writeup repository)
#+ATTR_REVEAL: :frag (-)
[[./images/beist.png]]

#+BEGIN_NOTES
Upload some data, decompress it as BZip

Interesting to note that in real CTFs, people usually don't look to the real
libraries initially since it would typically make the events take up too much
time -- or at least, if we always were investigating things it would.
#+END_NOTES

** lollerskaters privesc

#+ATTR_REVEAL: :frag (appear)
#+BEGIN_SRC
=============================================================================
FreeBSD-SA-11:05.unix                                       Security Advisory
                                                          The FreeBSD Project

Topic:          Buffer overflow in handling of UNIX socket addresses

Category:       core
Module:         kern
Announced:      2011-09-28
Credits:        Mateusz Guzik
Affects:        All supported versions of FreeBSD.

[...]

II.  Problem Description

When a UNIX-domain socket is attached to a location using the bind(2)
system call, the length of the provided path is not validated.  Later,
when this address was returned via other system calls, it is copied into
a fixed-length buffer.

Linux uses a larger socket address structure for UNIX-domain sockets
than FreeBSD, and the FreeBSD's linux emulation code did not translate
UNIX-domain socket addresses into the correct size of structure.
#+END_SRC
#+BEGIN_NOTES
https://www.freebsd.org/security/advisories/FreeBSD-SA-11:05.unix.asc
#+END_NOTES
** wireshark 0day
[[./images/wireshark.jpg]]
#+BEGIN_NOTES
http://reddit.com/r/netsec/comments/xgzt1/defcon_20_ctf_network_raw_pcap_torrent/c5mvehs
#+END_NOTES

** guesspw
- challenge from codegate CTF
#+BEGIN_SRC C
inputfile = realpath(argv[1]);
if (strstr(inputfile,"password") || strstr(inputfile,"flag"))
{
  goto fail;
}
password = read(open("/home/guesspw/password"));
attempt = read(open(inputfile));
if (strcmp(password,attempt)) 
{
  system("/bin/sh");
}
#+END_SRC

*** guesspw solutions
#+ATTR_REVEAL: :frag (- - -)
- /dev/fd/3
- race condition (TOCTTOU)
- MAXSYMLINKS (SYMLOOP＿PMAX)
#+BEGIN_NOTES
Who knows about MAXSYMLINKS? (BSD), or SYMLOOP＿PMAX (POSIX)?
Who knows what the values are commonly defined as? (8, 40)
#+END_NOTES

** bound payloads / chflags
#+BEGIN_NOTES
A number of the same techniques Patrick mentioned yesterday in his BADA$$ OS X
Malware talk have been fielded over the past few years in CTFs.  Our team
encrypted payloads using unique properties of the target host, for example four
years ago. It makes 'overnight analysis' difficult or impossible.

Additionally, the example he cited of chflags settings as well has been used
back when DEF CON was BSD based.

Ask me afterward about de-anonymizing hosts on a reverse-NAT through the TCP
timestamp field too.
#+END_NOTES

* Free Tools!                                                        
[[./images/freelabor.jpg]]
#+BEGIN_NOTES
Crowd-sourced bugs.

Want someone to build a free IDA loader for you if one doesn't exist for the
platform you're working on? Just release a CTF challenge on it, and someone will
publish it!  Somewhat kidding about this, but it has happened multiple times. I
know multiple people who've released challenges specifically for that, and even
as recently as a few months ago, a Nintendo 3DSX loader for IDA was created
specifically because of a CTF challenge.

https://github.com/0xEBFE/3DSX-IDA-PRO-Loader
#+END_NOTES

* CTF Gaming Challenges 
(a most certainly non-exhaustive list)
#+BEGIN_NOTES
(20min)
- PPP/GitS one upping / inspiration (explain PPP/GitS!)
- Complexity on the rise
#+END_NOTES

** 
#+BEGIN_SRC 
          ________
         / ____/ /_  ____  ____  ________     __  ______  __  _______
        / /   / __ \/ __ \/ __ \/ ___/ _ \   / / / / __ \/ / / / ___/
       / /___/ / / / /_/ / /_/ (__  )  __/  / /_/ / /_/ / /_/ / /
       \____/_/ /_/\____/\____/____/\___/   \__, /\____/\__,_/_/
    ____                    ___       __   /____/        __
   / __ \_      ______     /   | ____/ /   _____  ____  / /___  __________
  / /_/ / | /| / / __ \   / /| |/ __  / | / / _ \/ __ \/ __/ / / / ___/ _ \
 / ____/| |/ |/ / / / /  / ___ / /_/ /| |/ /  __/ / / / /_/ /_/ / /  /  __/
/_/     |__/|__/_/ /_/  /_/  |_\__,_/ |___/\___/_/ /_/\__/\__,_/_/   \___/

You hold in your hands a map to a vast treasure under the mountain.  Your
desire to be rich far outweighs your desire to cooperate with others, so
you are obviously going on this quest alone, with only your wits and your
awesome hacker magic to aid you.

You start your quest on a road just outside of town.

You feel a strange forboding feeling eminating from the map, like it has
an alien magic all of its own.

What do you do?
1) Follow the road toward the mountain.
2) Turn around and ask the mage in town what is going on.
Choice:
#+END_SRC
#+BEGIN_NOTES
Feb 15, 2013
Started the name of the series, "Chose your Pwn Adventure" because you could
solve it multiple ways.
#+END_NOTES

** Blocky
[[./images/blocky-02-overview.png]]
#+BEGIN_NOTES
January 27, 2012
http://andrewl.dreamhosters.com/blog/2012-02-07/
Explain context of SMT solvers to modern exploitation
#+END_NOTES

** Blocky
[[./images/blocky-03-westdetail.png]]
#+BEGIN_NOTES
January 27, 2012
http://andrewl.dreamhosters.com/blog/2012-02-07/
#+END_NOTES

** Escape from Minecraft
- [[http://blog.dragonsector.pl/2014/02/ph4quals-escape-from-minecraft.html][Dragon Sector Writeup]]
[[./images/logic_overview.png]]
#+BEGIN_NOTES
PHDays
Jan 25, 2014 - Jan 27, 2014
Four stage, 4-bit shift register
#+END_NOTES

** Plaid CTF v1
[[./images/worldmap.png]]
#+BEGIN_NOTES
Apr 27, 2012 - Apr 28, 2012
#+END_NOTES

** Plaid CTF v2
[[./images/pctf2013.jpg]]
#+BEGIN_NOTES
April 19, 2013 - April 20, 2013
#+END_NOTES

** Pwn Adventure (2)
#+REVEAL_HTML: <video width="960" height="540" controls data-autoplay><source src="media/gits2014teaser-small.mp4" type="video/mp4"></video>
#+BEGIN_NOTES
Jan 17, 2014 — Jan 19, 2014
#+END_NOTES

* Pwn Adventure 3 Demo
#+BEGIN_NOTES
(30min)
#+END_NOTES
** Challenges
- Unbearable Revenge
- Fire and Ice
- Overachiever
- Until the Cows Come Home
- Pirate's Treasure
- Blocky's Revenge
- Egg Hunt

* 3rd Party Hacks
#+BEGIN_NOTES
(45min)
#+END_NOTES
** LD＿PRELOAD

** Wireshark Dissector
- https://github.com/maetrics/wireshark-scripts/blob/master/gits.lua
#+BEGIN_SRC js
-- gits.lua
-- A wireshark plug-in to reverse engineer PwnAdventure 3 traffic
--
-- http://pwnadventure.com/ for more information.
--
-- eric.gragsone@erisresearch.org

gits_proto=Proto("GitS", "Pwn Adventure 3")

function addLocation(tvb, pos, tree)
  local branch
  
  branch=tree:add(tvb(pos,12), "Location")
  branch:add(tvb(pos,4), "X Coordinates: "..tvb(pos,4):le_uint())
  branch:add(tvb(pos+4,4), "Y Coordinates: "..tvb(pos+4,4):le_uint())
  branch:add(tvb(pos+8,4), "Z Coordinates: "..tvb(pos+8,4):le_uint())
end
#+END_SRC

** PwnAdventure3Hacks Github
- DirectX Overlay
- [[https://github.com/zku/PwnAdventure3Hacks][github.com/zku/PwnAdventure3Hacks]]
[[./images/overlay.png]]

** Samurai PwnHax.cpp
[[https://gist.github.com/dropkickgit/2b65c0ac18506e5c5f0f][gist.github.com/dropkickgit/2b65c0ac18506e5c5f0f]]
#+BEGIN_SRC C
#include <Windows.h>
#include <detours.h>
#include <fstream>
#include <cstdio>
#include <cstdlib>
 
#pragma comment(lib, "detours.lib")
 
// Classes
class TCPSocket {};
class Player {};
class Actor {};
 
// Structs
struct Vector3 {
	float x, y, z;
};
 
// Typedefs
typedef bool(__thiscall *SendFunc)(TCPSocket *, const void*, unsigned int);
typedef bool(__thiscall *RecvFunc)(TCPSocket *, void*, unsigned int);
typedef bool(__thiscall *CanJumpFunc)(Player *);
typedef bool(__thiscall *PlayerChatFunc)(Player *, const char *);
typedef void(__thiscall *PlayerFastTravelFunc)(Player *, const char *, const char *);
typedef void(__thiscall *ActorSetPositionFunc)(Actor *, Vector3 *);
 
// Globals
SendFunc RealSend;
RecvFunc RealRecv;
CanJumpFunc RealCanJump;
PlayerChatFunc RealChat;
PlayerFastTravelFunc PlayerFastTravel;
ActorSetPositionFunc ActorSetPosition;
Player *playerObj = 0;
TCPSocket *clientSock = 0;
std::ofstream DbgLogger;
#+END_SRC

* Unintended Bugs
:PROPERTIES:
:reveal_background: ./images/bees.jpg
:reveal_background_trans: none
:END:      

** OmniTheft
:PROPERTIES:
:reveal_background: ./images/theft.jpg
:reveal_background_trans: none
:END:      
#+BEGIN_NOTES
#+END_NOTES

** Bearly Assasinated
:PROPERTIES:
:reveal_background: ./images/golden.jpg
:reveal_background_trans: none
:END:      
#+BEGIN_NOTES
#+END_NOTES

** Flying Bodies
:PROPERTIES:
:reveal_background: ./images/flying.jpg
:reveal_background_trans: none
:END:      
#+BEGIN_NOTES
#+END_NOTES

** Eggcellent Solution
:PROPERTIES:
:reveal_background: ./images/eggs.jpg
:reveal_background_trans: none
:END:      
#+BEGIN_NOTES
#+END_NOTES

** Cheat Engine
:PROPERTIES:
:reveal_background: ./images/engine.jpg
:reveal_background_trans: none
:END:      
#+BEGIN_NOTES
#+END_NOTES

** Spelunking
:PROPERTIES:
:reveal_background: ./images/cave.jpg
:reveal_background_trans: none
:END:      
#+BEGIN_NOTES
Unintended solution killed via testing.
#+END_NOTES

* Useful CTF Tools
- xortool [[https://github.com/hellman/xortool][github.com/hellman/xortool]]
- pwntools [[https://github.com/Gallopsled/pwntools][github.com/Gallopsled/pwntools]]
- qira [[https://github.com/BinaryAnalysisPlatform/qira][github.com/BinaryAnalysisPlatform/qira]] / [[http://qira.me][qira.me]]

* More CTF Resources

- [[https://ctftime.org/][ctftime.org]] - Events, team scores, writeups
- [[http://captf.com/][captf.com]] - dump site, mirrors, calendar
- [[http://golden-flags.com/][golden-flags.com]] - yearly CTF awards
- [[https://github.com/ctfs/][github.com/ctfs]] - best maintained collection of writeups

* Meta
#+BEGIN_SRC text
Thanks to:
Dragon Sector Escape from Minecraft Writeup used with Permission:
	http://blog.dragonsector.pl/2014/02/ph4quals-escape-from-minecraft.html
Made with:
Spacemacs: https://github.com/syl20bnr/spacemacs
Org-Reveal: Export from org-mode straight to reveal.js html5 presentations:
	https://github.com/yjwen/org-reveal
Using images from:
Free Labor Image: https://www.flickr.com/photos/donkeyhotey/5501554002 (CC BY)
Toy Soldiers: http://www.flickr.com/photos/janramroth/2264184078/ (CC BY)
Any Bonds Today: http://en.wikipedia.org/wiki/Any_Bonds_Today (PD)
It's Got Me Again: http://en.wikipedia.org/wiki/It%27s_Got_Me_Again! (PD)
Confused: https://flickr.com/photos/83633410@N07/7658225516 (CC BY-SA)
Bugs: https://www.flickr.com/photos/jurvetson/3097134746/ (CC BY)
Thief: https://www.flickr.com/photos/fhke/3335949405 (CC BY-SA)
Golden Gun: https://www.flickr.com/photos/mrgarethm/14592496766 (CC BY)
Flying: https://www.flickr.com/photos/scion02b/2765655302/ (CC BY)
Eggs: https://www.flickr.com/photos/erix/131405474/ (CC BY)
Engine: https://www.flickr.com/photos/michchap/14607705463/ (CC BY)
Cave: https://www.flickr.com/photos/watchsmart/2059057874 (CC BY)
Bees: http://wikimedia.org/wiki/File:-_Bee_swarm_on_a_bicycle_(1-5)_-.jpg
  (CC BY-SA)
#+END_SRC

* 
- Slides: [[https://github.com/vector35/HackingGames][github.com/vector35/HackingGames]]
- Binary Ninja: [[https://binary.ninja/][binary.ninja]]

* Random 1
:PROPERTIES:
:reveal_background: ./images/rando1.gif
:reveal_background_size: 720px
:reveal_background_trans: none
:END:      
#+BEGIN_NOTES
Public Domain: http://en.wikipedia.org/wiki/Any_Bonds_Today
#+END_NOTES

* Random 2
:PROPERTIES:
:reveal_background: ./images/rando2.gif
:reveal_background_trans: none
:END:
#+BEGIN_NOTES
Public Domain: http://en.wikipedia.org/wiki/It%27s_Got_Me_Again!
#+END_NOTES

* Random 3
:PROPERTIES:
:reveal_background: ./images/rando3.gif
:reveal_background_trans: none
:END:
#+BEGIN_NOTES
Public Domain: http://en.wikipedia.org/wiki/It%27s_Got_Me_Again!
#+END_NOTES

* Bonus!
:PROPERTIES:
:reveal_background: ./images/MMIBH-team-photo.jpg
:reveal_background_trans: none
:END:
#+BEGIN_NOTES
 We put on our robe and wizard hats
#+END_NOTES
